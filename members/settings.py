'''General project settings.'''
import os

import ldap
from django_auth_ldap.config import (
    LDAPSearch,
    PosixGroupType
)

from .localSettings import (
    LDAP_AUTHENTICATION_DN,
    LDAP_AUTHENTICATION_PASSWORD,
    LDAP_SERVER_URI,
    LDAP_MANAGEMENT_DN,
    LDAP_MANAGEMENT_PASSWORD
)


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-@2v3*j$uux!_lpbinu+e#9ro8a7-u34i&s0@c8^!f9b_77^g&'
DEBUG = True
ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'accounts.apps.AccountsConfig',
    'customAuthAdmin.auth.user',
    'network.apps.NetworkConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compressor'
]


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'members.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'members.wsgi.application'

COMPRESS_PRECOMPILERS = (
    ('text/scss', 'bundle exec sass --scss {infile} {outfile}'),
)

STATICFILES_FINDERS = (
    'compressor.finders.CompressorFinder',
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

# Static files (CSS, JavaScript, Images)
COMPRESS_ROOT = os.path.join(BASE_DIR, "static")

COMPRESS_ENABLED = True

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Authentication
AUTHENTICATION_BACKENDS = ['django_auth_ldap.backend.LDAPBackend',
                           'django.contrib.auth.backends.ModelBackend']

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# TO DO : Remove hardcoded urls

LOGIN_URL = "/accounts/login/"

LOGIN_REDIRECT_URL = "/network/devices/"

# Internationalization
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

'''General informations.'''
PLATFORM_NAME = "members.atilla.org"
PLATFORM_HOSTNAME = "members.atilla.org"
PLATFORM_USING_HTTPS = False

'''LDAP Settings for LDAP authentication backend.'''
AUTH_LDAP_SERVER_URI = LDAP_SERVER_URI
AUTH_LDAP_BIND_DN = LDAP_AUTHENTICATION_DN
AUTH_LDAP_BIND_PASSWORD = LDAP_AUTHENTICATION_PASSWORD

AUTH_LDAP_USER_SEARCH = LDAPSearch(
    'ou=users,dc=atilla,dc=org',
    ldap.SCOPE_SUBTREE,
    '(uid=%(user)s)',
)

AUTH_LDAP_USER_ATTR_MAP = {
    'first_name': 'givenName',
    'last_name': 'sn',
    'email': 'mail',
}

AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
    'ou=groups,dc=atilla,dc=org',
    ldap.SCOPE_SUBTREE,
    'objectClass=posixGroup)',
)

AUTH_LDAP_GROUP_TYPE = PosixGroupType()

''' === Settings for the accounts app === '''
MAIL_SENDER = 'noreply@members.atilla.org'

LDAP_USERS_BASE_DN = 'ou=users,dc=atilla,dc=org'
LDAP_DEFAULT_USER_OU = 'users'
LDAP_DEFAULT_GID = 500
LDAP_DEFAULT_HOME_PATH = '/home/users/'

''' === Settings for the network app === '''

'''Device, Interface and user settings.'''
MAX_DEVICE_PER_USER = 3
MAX_INTERFACE_PER_DEVICE = 2

'''Output configuration.'''
# These files contain the differents DHCP and DNS configurations generated by
# the app.

DHCP_CONFIG_OUTPUT = os.path.join(BASE_DIR, 'dhcp.conf')
DNS_CONFIG_OUTPUT = os.path.join(BASE_DIR, 'dns.conf')
REV_DNS_CONFIG_OUTPUT = os.path.join(BASE_DIR, 'rev.dns.conf')

'''IP configuration.'''
# This application only supports IPV4 networks with /24 subnets

# Network IP prefix
IP_NETWORK_PREFIX = '192.168.253.'
# IP allocation ranges
IP_RANGE_START = 45
IP_RANGE_END = 254

'''Nameserver configuration.'''

# Gereral NS options
TTL = 86400
NEGATIVE_CACHE_TTL = 86400
REFRESH = 21600
RETRY = 3600
EXPIRE = 2419200

# DNS serial to derive from ; very useful if you have a master-slave
# configuration and you don’t want to reset your zones
DNS_BASE_SERIAL = 42

# Domain name configuration
DNS_DOMAIN = 'salle106.atilla.org'
REV_DNS_DOMAIN = 'salle106.atilla.org'
DNS_DOMAIN_SEARCH = 'members.salle106.atilla.org'
DNS_SERVER_1 = '192.168.253.1'
DNS_SERVER_2 = '192.168.253.1'

REV_DNS_ORIGIN = '253.168.192.in-addr.arpa'

DOMAIN_ROOT_SERVER = '192.168.253.1'
DOMAIN_MAIL_SERVER = '192.168.253.1'
